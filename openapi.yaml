openapi: 3.0.1
info:
  title: L7NS-API
  description: L7NSLANG INTERNAL API
  contact:
    email: hi@lynsei.com
  license:
    name: GPL-3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
  version: 9.0.0
externalDocs:
  description: L7NS Docs
  url: 'http://www.emergentary.com'
tags:
  - name: Activity
    description:
      All events that happen within L7NS are tracked and stored in the activities collection. This gives you full
      accountability over everything that happens.
    x-collection: lyns_activity
  - name: Assets
    description: Assets are items that are actually resources or objects
  - name: Authentication
    description:
      All events that happen within L7ns are tracked and stored in the activities collection. This gives you full
      accountability over everything that happens.
  - name: Presets
    description:
      Presets hold the preferences of individual users of the platform. This allows L7ns to show and maintain custom
      item listings for users of the app.
    x-collection: lyns_presets
  - name: Collections
    description:
      Collections (c10n) are the individual collections of items, similar to tables in a database. Changes to collections will alter the schema of the resulting database.  Remember that L7NS Generic Schema generates RethinkDB tables.
    x-collection: lyns_collections
  - name: Extensions
    description:
      L7NS can easily be extended through the addition of several types of extensions, including layouts,
      interfaces, and modules.  As we begin to add more of those extensions they will appear here.
  - name: Elements
    description: Elements are individual sections of content within an item. They are mapped to columns in the database.
    x-collection: lyns_fields
  - name: Templates
    description:
      Templates are associated with blocks, which container elements.   Tempplates map content to blocks, and store elements by manipulating them with block templates.
    x-collection: directus_files
paths:
  # Activity
  /activity:
    $ref: './paths/activity/activities.yaml'
  /activity/comment:
    $ref: './paths/activity/activity-comments.yaml'
  /activity/{id}:
    $ref: './paths/activity/activity.yaml'
  /activity/comment/{id}:
    $ref: './paths/activity/activity-comment.yaml'

  # Assets
  /assets/{id}:
    $ref: './paths/assets/assets.yaml'

  # Authentication
  /auth/login:
    $ref: './paths/auth/login.yaml'
  /auth/refresh:
    $ref: './paths/auth/refresh.yaml'
  /auth/logout:
    $ref: './paths/auth/logout.yaml'
  /auth/password/request:
    $ref: './paths/auth/password-request.yaml'
  /auth/password/reset:
    $ref: './paths/auth/password-reset.yaml'
  /auth/oauth:
    $ref: './paths/auth/oauth.yaml'
  /auth/oauth/{provider}:
    $ref: './paths/auth/oauth-provider.yaml'

  # Items
  /items/{collection}:
    $ref: './paths/items/items.yaml'
  /items/{collection}/{id}:
    $ref: './paths/items/item.yaml'

  # Presets
  /presets:
    $ref: './paths/presets/presets.yaml'
  /presets/{id}:
    $ref: './paths/presets/preset.yaml'

  # Collections
  /collections:
    $ref: './paths/collections/collections.yaml'
  /collections/{id}:
    $ref: './paths/collections/collection.yaml'

  # Extensions
  /extensions/interfaces:
    $ref: './paths/extensions/interfaces.yaml'
  /extensions/layouts:
    $ref: './paths/extensions/layouts.yaml'
  /extensions/displays:
    $ref: './paths/extensions/displays.yaml'
  /extensions/modules:
    $ref: './paths/extensions/modules.yaml'

  # Fields
  /fields:
    $ref: './paths/fields/fields.yaml'
  /fields/{collection}:
    $ref: './paths/fields/collection-fields.yaml'
  /fields/{collection}/{id}:
    $ref: './paths/fields/collection-field.yaml'

  # Files
  /files:
    $ref: './paths/files/files.yaml'
  /files/{id}:
    $ref: './paths/files/file.yaml'

  # Folders
  /folders:
    $ref: './paths/folders/folders.yaml'
  /folders/{id}:
    $ref: './paths/folders/folder.yaml'

  # Permissions
  /permissions:
    $ref: './paths/permissions/permissions.yaml'
  /permissions/me:
    $ref: './paths/permissions/permissions-me.yaml'
  /permissions/{id}:
    $ref: './paths/permissions/permission.yaml'

  # Relations
  /relations:
    $ref: './paths/relations/relations.yaml'
  /relations/{id}:
    $ref: './paths/relations/relation.yaml'

  # Revisions
  /revisions:
    $ref: './paths/revisions/revisions.yaml'
  /revisions/{id}:
    $ref: './paths/revisions/revision.yaml'

  # Roles
  /roles:
    $ref: './paths/roles/roles.yaml'
  /roles/{id}:
    $ref: './paths/roles/role.yaml'

  # Server
  /server/info:
    $ref: './paths/server/info.yaml'
  /server/ping:
    $ref: './paths/server/ping.yaml'

  # Settings
  /settings:
    $ref: './paths/settings/settings.yaml'

  # Users
  /users:
    $ref: './paths/users/users.yaml'
  /users/{id}:
    $ref: './paths/users/user.yaml'
  /users/invite:
    $ref: './paths/users/invite.yaml'
  /users/invite/accept:
    $ref: './paths/users/invite-accept.yaml'
  /users/me:
    $ref: './paths/users/me.yaml'
  /users/me/track/page:
    $ref: './paths/users/me-tracking.yaml'
  /users/me/tfa/enable:
    $ref: './paths/users/me-tfa-enable.yaml'
  /users/me/tfa/disable:
    $ref: './paths/users/me-tfa-disable.yaml'

  /utils/random/string:
    $ref: './paths/utils/random.yaml'
  /utils/sort/{collection}:
    $ref: './paths/utils/sort.yaml'

  # Webhooks
  /webhooks:
    $ref: './paths/webhooks/webhooks.yaml'
  /webhooks/{id}:
    $ref: './paths/webhooks/webhook.yaml'

components:
  schemas:
    Activity:
      $ref: './components/activity.yaml'
    Presets:
      $ref: './components/preset.yaml'
    Collections:
      $ref: './components/collection.yaml'
    Fields:
      $ref: './components/field.yaml'
    Files:
      $ref: './components/file.yaml'
    Folders:
      $ref: './components/folder.yaml'
    Items:
      $ref: './components/item.yaml'
    Permissions:
      $ref: './components/permissions.yaml'
    Relations:
      $ref: './components/relation.yaml'
    Revisions:
      $ref: './components/revision.yaml'
    Roles:
      $ref: './components/role.yaml'
    Settings:
      $ref: './components/setting.yaml'
    Users:
      $ref: './components/user.yaml'
    Webhooks:
      $ref: './components/webhook.yaml'
  parameters:
    # All path parameters
    Id:
      $ref: './parameters/id.yaml'
    UUId:
      $ref: './parameters/uuid.yaml'
    Collection:
      $ref: './parameters/collection.yaml'

    # All query parameters
    Search:
      $ref: './parameters/search.yaml'
    Page:
      $ref: './parameters/page.yaml'
    Offset:
      $ref: './parameters/offset.yaml'
    Sort:
      $ref: './parameters/sort.yaml'
    Meta:
      $ref: './parameters/meta.yaml'
    Limit:
      $ref: './parameters/limit.yaml'
    Filter:
      $ref: './parameters/filter.yaml'
    Fields:
      $ref: './parameters/fields.yaml'
    Mode:
      $ref: './parameters/mode.yaml'
  responses:
    NotFoundError:
      $ref: './responses/notFoundError.yaml'
    UnauthorizedError:
      $ref: './responses/unauthorizedError.yaml'
  securitySchemes:
    KeyAuth:
      type: apiKey
      in: query
      name: access_token
    Auth:
      type: apiKey
      in: header
      name: 'Authorization'
  x-metadata:
    type: object
    properties:
      total_count:
        description: Returns the total item count of the collection you're querying.
        type: integer
      filter_count:
        description:
          Returns the item count of the collection you're querying, taking the current filter/search parameters into
          account.
        type: integer
security:
  - Auth: []
  - KeyAuth: []